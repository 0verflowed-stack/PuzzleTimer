<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutAuthor" xml:space="preserve">
    <value>About application</value>
  </data>
  <data name="AboutAuthorText" xml:space="preserve">
    <value />
  </data>
  <data name="AboutText1" xml:space="preserve">
    <value>Version 1.0.0</value>
  </data>
  <data name="AboutText2" xml:space="preserve">
    <value>Created by Dmytro Alyanakh</value>
  </data>
  <data name="AboutText3" xml:space="preserve">
    <value>For more information look on</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Avg" xml:space="preserve">
    <value>Avarage</value>
  </data>
  <data name="Avg3Last" xml:space="preserve">
    <value>Avarage 3 last: </value>
  </data>
  <data name="Avg5Last" xml:space="preserve">
    <value>Avarage 5 last: </value>
  </data>
  <data name="AvgAll" xml:space="preserve">
    <value>Avarage all: </value>
  </data>
  <data name="AvgAnySelected" xml:space="preserve">
    <value>selected:</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Chart" xml:space="preserve">
    <value>Chart</value>
  </data>
  <data name="ChartWindowText" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>Clear all</value>
  </data>
  <data name="CopyToClipboard" xml:space="preserve">
    <value>Copy to clipboard</value>
  </data>
  <data name="CultureString" xml:space="preserve">
    <value>en-US</value>
  </data>
  <data name="CustomScrambleWindowButtonCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CustomScrambleWindowButtonDone" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="CustomScrambleWindowText" xml:space="preserve">
    <value>Enter custom scramble</value>
  </data>
  <data name="DateToolTipText" xml:space="preserve">
    <value>month/day/year hour:minute:second</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Generating" xml:space="preserve">
    <value>Generating...</value>
  </data>
  <data name="GridHeaderIdText" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="GridHeaderPuzzleNameText" xml:space="preserve">
    <value>Puzzle type</value>
  </data>
  <data name="GridHeaderScrambleText" xml:space="preserve">
    <value>Scramble</value>
  </data>
  <data name="GridHeaderSolutionDateText" xml:space="preserve">
    <value>Solution date</value>
  </data>
  <data name="GridHeaderSolutionTimeText" xml:space="preserve">
    <value>Solution time</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HelpText1" xml:space="preserve">
    <value>Quick guide:</value>
  </data>
  <data name="HelpText10" xml:space="preserve">
    <value>9. To show avarage solution time on custom number of items input appropriet number in the bottom of the window or select items(lines) for those it is need to find avarage solution time and it will show in the bottom of the window;</value>
  </data>
  <data name="HelpText11" xml:space="preserve">
    <value>10. You can change your current puzzle in combo box in the bottom of the screen;</value>
  </data>
  <data name="HelpText12" xml:space="preserve">
    <value>11. On main window button New scramble generates new scramble. Button Table/Unfold shows table/unfold accordingly;</value>
  </data>
  <data name="HelpText2" xml:space="preserve">
    <value>1.To start timer press Space button for more then 1 second and then unpress, to stop press Space button again;</value>
  </data>
  <data name="HelpText3" xml:space="preserve">
    <value>2.To use scrambles for 2x2-7x7 you must hold your cube this way: Front - Green, Left - Orange;For Skweb: Up - White, Left - Green; For Pyraminx: Front - Green, Left - Red; For Megaminx: Up - White, Front - Dark Green;</value>
  </data>
  <data name="HelpText4" xml:space="preserve">
    <value>3.Double-click row to enter update menu or select row and click Edit-&gt;Update;</value>
  </data>
  <data name="HelpText5" xml:space="preserve">
    <value>4.Click on pencil on the main screen to input custom scramble;</value>
  </data>
  <data name="HelpText6" xml:space="preserve">
    <value>5. In menu item Help-&gt;Settings you can change theme and language of the application;</value>
  </data>
  <data name="HelpText7" xml:space="preserve">
    <value>6. In Edit menu item you can Add, Clear all items; Update and Delete (also by clicking delete button after selection of line or lines) item if appropriate line was selected in table. Also you can copy main information about solution to share if appropriate line was selected in table.</value>
  </data>
  <data name="HelpText8" xml:space="preserve">
    <value>7. To see chart on current puzzle click on menu item Chart;</value>
  </data>
  <data name="HelpText9" xml:space="preserve">
    <value>8. If you want to hide stopwatch while solving puzzle uncheck "Show time" checkbox;</value>
  </data>
  <data name="incorrectDate" xml:space="preserve">
    <value>INCORRECT SOLUTION DATE</value>
  </data>
  <data name="incorrectScramble" xml:space="preserve">
    <value>INCORRECT SCRAMBLE</value>
  </data>
  <data name="incorrectScramblePlus" xml:space="preserve">
    <value>, SCRAMBLE</value>
  </data>
  <data name="incorrectTime" xml:space="preserve">
    <value>INCORRECT SOLUTION TIME</value>
  </data>
  <data name="incorrectTimePlus" xml:space="preserve">
    <value>, SOLUTION TIME</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="Last" xml:space="preserve">
    <value>last:</value>
  </data>
  <data name="NewScramble" xml:space="preserve">
    <value>New Scramble</value>
  </data>
  <data name="PuzzleType" xml:space="preserve">
    <value>Selected puzzle:</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Scramble" xml:space="preserve">
    <value>Scramble:</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ShowTime" xml:space="preserve">
    <value>Show time</value>
  </data>
  <data name="SolutionDate" xml:space="preserve">
    <value>Solution date:</value>
  </data>
  <data name="SolutionTime" xml:space="preserve">
    <value>Solution time:</value>
  </data>
  <data name="SolutionTimeTextBoxToolTipText" xml:space="preserve">
    <value>Examples Hours:Minutes:Seconds.Milliseconds(only first two digits, f.e. if 63 ms then write 0.06, 727 ms then 0.72)</value>
  </data>
  <data name="Table" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme:</value>
  </data>
  <data name="Unfold" xml:space="preserve">
    <value>Unfold</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="ZeroItemsCantDrawChart" xml:space="preserve">
    <value>Zero items! Can't draw chart!</value>
  </data>
</root>
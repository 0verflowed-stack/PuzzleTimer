<UserControl x:Class="PuzzleTimer.Views.ItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:PuzzleTimer.Views"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800" Style="{DynamicResource WindowStyle}">
    <Grid>
        <StackPanel Margin="40 20 40 20">
            <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding PuzzleTypeText, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                    <ComboBox ItemsSource="{Binding PuzzleNameCollection}" 
                              SelectedIndex="{Binding ComboBoxSelectedIndex, UpdateSourceTrigger=PropertyChanged}" 
                              Width="120" Margin="20 0 20 0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding PuzzleTypeSelectionChangedCommand}" PassEventArgsToCommand="True"></b:InvokeCommandAction>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="{Binding SolutionDateText, UpdateSourceTrigger=PropertyChanged}" Margin="0 2 0 0"/>
                    <TextBox Text="{Binding SolutionDateTextBox, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding DateToolTipText, UpdateSourceTrigger=PropertyChanged}"
                             Width="120" Height="18" Margin="10 0 20 0"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0 15 0 0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding SolutionTimeText, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                    <TextBox Text="{Binding SolutionTimeTextBox, UpdateSourceTrigger=PropertyChanged}" 
                             ToolTip="{Binding SolutionTimeTextBoxToolTipText, UpdateSourceTrigger=PropertyChanged}"
                             Width="120" Height="18" Margin="10 0 20 0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding ScrambleText, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                    <TextBox Text="{Binding ScrambleTextBox, UpdateSourceTrigger=PropertyChanged}" Width="120" Height="18" Margin="31 0 20 0"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Margin="0 5 0 0">
                <TextBlock Foreground="Red" Text="{Binding WarningText}" ></TextBlock>
                <Button Content="{Binding AddUpdateText, UpdateSourceTrigger=PropertyChanged}" 
                        Command="{Binding AddUpdateCommand}" Margin="0 5 0 0" FontSize="14" 
                        Style="{DynamicResource ButtonStyle}" />
            </StackPanel>
            <StackPanel>
                <StackPanel Visibility="{Binding UnfoldsVisibility[0], UpdateSourceTrigger=PropertyChanged}">
                    <local:NByNCubeView Background="Transparent" 
                                Width="{Binding ControlWidth, UpdateSourceTrigger=PropertyChanged}"
                                Height="{Binding ControlHeight, UpdateSourceTrigger=PropertyChanged}"
                                DataContext="{Binding NByNCubeViewModelProperty, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel Visibility="{Binding UnfoldsVisibility[1], UpdateSourceTrigger=PropertyChanged}">
                    <local:SkwebView Background="Transparent"
                                Width="{Binding ControlWidth, UpdateSourceTrigger=PropertyChanged}"
                                Height="{Binding ControlHeight, UpdateSourceTrigger=PropertyChanged}"
                                DataContext="{Binding SkwebViewModelProperty, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel Visibility="{Binding UnfoldsVisibility[2], UpdateSourceTrigger=PropertyChanged}">
                    <local:PyraminxView Background="Transparent"
                                Width="{Binding ControlWidth, UpdateSourceTrigger=PropertyChanged}"
                                Height="{Binding ControlHeight, UpdateSourceTrigger=PropertyChanged}"
                                DataContext="{Binding PyraminxViewModelProperty, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel Visibility="{Binding UnfoldsVisibility[3], UpdateSourceTrigger=PropertyChanged}">
                    <local:MegaminxView Background="Transparent"
                                Width="{Binding ControlWidth, UpdateSourceTrigger=PropertyChanged}"
                                Height="{Binding ControlHeight, UpdateSourceTrigger=PropertyChanged}"
                                DataContext="{Binding MegaminxViewModelProperty, UpdateSourceTrigger=PropertyChanged}">
                        <local:MegaminxView.RenderTransform>
                            <TransformGroup>
                                <RotateTransform CenterX="0" CenterY="0" Angle="0" />
                                <TranslateTransform X="-120"
                                        Y="-60" />
                            </TransformGroup>
                        </local:MegaminxView.RenderTransform>
                    </local:MegaminxView>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
